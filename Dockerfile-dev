# docker-tensor:dev
# docker build -t tensor-docker:dev -f Dockerfile-dev .
# docker run --rm -v `pwd`:/home/tensor-docker -it tensor-docker:dev /bin/bash
FROM python:3.6


RUN cd ~ && apt-get update -y --fix-missing 
RUN apt-get upgrade -y
RUN apt-get install -yq build-essential cmake unzip pkg-config libjpeg-dev libpng-dev libtiff-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libgtk-3-dev libatlas-base-dev gfortran python3-dev && apt-get install -yq make cmake gcc g++ unzip wget build-essential gcc zlib1g-dev vim python3-pip mlocate

# Opencvのインストール
RUN ln -s /usr/include/libv4l1-videodev.h /usr/include/linux/videodev.h
#RUN cd ~/tmp && git clone https://github.com/opencv/opencv.git && git clone https://github.com/opencv/opencv_contrib.git
RUN wget -O opencv.zip https://github.com/opencv/opencv/archive/3.4.3.zip && unzip opencv.zip
RUN wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/3.4.3.zip && unzip opencv_contrib.zip

RUN pwd
RUN cd opencv-3.4.3 && mkdir build && cd build && cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D INSTALL_C_EXAMPLES=OFF \
    -D OPENCV_EXTRA_MODULES_PATH=/opencv_contrib-3.4.3/modules \
    -D PYTHON_EXECUTABLE=/usr/local/bin/python3 \
    -D BUILD_EXAMPLES=ON ..
RUN cd /opencv-3.4.3/build && make -j2 && make install
RUN ldconfig

# TensorflowとOpencvのインストール
RUN pip3 install numpy tensorflow opencv-python

ENV APP_NAME tensor-docker
WORKDIR /home/$APP_NAME

CMD [ '/bin/bash'  ]
